/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/Application.java to edit this template
 */
package ezequiel.faiella.proyectoconversor;

import java.math.RoundingMode;
import java.text.DecimalFormat;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author ezequiel
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form VentanaPrincipal
     */
    public VentanaPrincipal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblMonto = new javax.swing.JLabel();
        txtIngreso = new javax.swing.JTextField();
        desplegable = new javax.swing.JComboBox<>();
        btnconvertir = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        saveAsMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        cutMenuItem = new javax.swing.JMenuItem();
        copyMenuItem = new javax.swing.JMenuItem();
        pasteMenuItem = new javax.swing.JMenuItem();
        deleteMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        contentsMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblMonto.setText("0.00");
        lblMonto.setToolTipText("");
        lblMonto.setName("lnlMonto"); // NOI18N

        txtIngreso.setName("txtIngreso"); // NOI18N

        desplegable.setModel(new DefaultComboBoxModel(Moneda.values()));
            desplegable.setName("desplegable"); // NOI18N

            btnconvertir.setText("Convertir");
            btnconvertir.setName("btnconvertir"); // NOI18N
            btnconvertir.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    btnconvertirMouseClicked(evt);
                }
                public void mousePressed(java.awt.event.MouseEvent evt) {
                    btnconvertirMousePressed(evt);
                }
            });

            fileMenu.setMnemonic('f');
            fileMenu.setText("File");

            openMenuItem.setMnemonic('o');
            openMenuItem.setText("Open");
            fileMenu.add(openMenuItem);

            saveMenuItem.setMnemonic('s');
            saveMenuItem.setText("Save");
            fileMenu.add(saveMenuItem);

            saveAsMenuItem.setMnemonic('a');
            saveAsMenuItem.setText("Save As ...");
            saveAsMenuItem.setDisplayedMnemonicIndex(5);
            fileMenu.add(saveAsMenuItem);

            exitMenuItem.setMnemonic('x');
            exitMenuItem.setText("Exit");
            exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    exitMenuItemActionPerformed(evt);
                }
            });
            fileMenu.add(exitMenuItem);

            menuBar.add(fileMenu);

            editMenu.setMnemonic('e');
            editMenu.setText("Edit");

            cutMenuItem.setMnemonic('t');
            cutMenuItem.setText("Cut");
            editMenu.add(cutMenuItem);

            copyMenuItem.setMnemonic('y');
            copyMenuItem.setText("Copy");
            editMenu.add(copyMenuItem);

            pasteMenuItem.setMnemonic('p');
            pasteMenuItem.setText("Paste");
            editMenu.add(pasteMenuItem);

            deleteMenuItem.setMnemonic('d');
            deleteMenuItem.setText("Delete");
            editMenu.add(deleteMenuItem);

            menuBar.add(editMenu);

            helpMenu.setMnemonic('h');
            helpMenu.setText("Help");

            contentsMenuItem.setMnemonic('c');
            contentsMenuItem.setText("Contents");
            helpMenu.add(contentsMenuItem);

            aboutMenuItem.setMnemonic('a');
            aboutMenuItem.setText("About");
            helpMenu.add(aboutMenuItem);

            menuBar.add(helpMenu);

            setJMenuBar(menuBar);

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(27, 27, 27)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(desplegable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(txtIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(26, 26, 26)
                                    .addComponent(lblMonto, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(149, 149, 149)
                            .addComponent(btnconvertir)))
                    .addContainerGap(78, Short.MAX_VALUE))
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(12, 12, 12)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblMonto)
                        .addComponent(txtIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(27, 27, 27)
                    .addComponent(desplegable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(42, 42, 42)
                    .addComponent(btnconvertir)
                    .addContainerGap(18, Short.MAX_VALUE))
            );

            pack();
        }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void btnconvertirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnconvertirMouseClicked
        
    }//GEN-LAST:event_btnconvertirMouseClicked

    private void btnconvertirMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnconvertirMousePressed
        ConvertirImporte();
    }//GEN-LAST:event_btnconvertirMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JButton btnconvertir;
    private javax.swing.JMenuItem contentsMenuItem;
    private javax.swing.JMenuItem copyMenuItem;
    private javax.swing.JMenuItem cutMenuItem;
    private javax.swing.JMenuItem deleteMenuItem;
    private javax.swing.JComboBox<String> desplegable;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JLabel lblMonto;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JMenuItem pasteMenuItem;
    private javax.swing.JMenuItem saveAsMenuItem;
    private javax.swing.JMenuItem saveMenuItem;
    private javax.swing.JTextField txtIngreso;
    // End of variables declaration//GEN-END:variables

    public enum Moneda {
                    pesosArg_dolar,
                    dolar_pesosArg,
                    gradoC_gradoF,
                    gradoF_gradoC
            }
	
	// MhfmjLKwdWYw2TUnKuM1Dio7tynF4EJ7                NO BORRAR!!!!!!!!!!
	
	public double dolar = 467.00;
	
	public double valorIngreso = 0;
        	
	public void ConvertirImporte() {
		
		if (ValidarIngreso(txtIngreso.getText())) {
			
			Moneda moneda = (Moneda) desplegable.getSelectedItem();
			switch (moneda) {
			case pesosArg_dolar -> pesosamoneda(dolar);
			case dolar_pesosArg -> monedaapesos(dolar);
			case gradoC_gradoF -> temperaturaCF();
			case gradoF_gradoC -> temperaturaFC();
			}
		}
		
	}
	
	public void temperaturaCF() {
		double resultado = valorIngreso * 1.8 + 32;
		lblMonto.setText(redondear(resultado));
	}
	
	public void temperaturaFC() {
		double resultado = (valorIngreso -32) / 1.8 ;
		lblMonto.setText(redondear(resultado));
	}
	
	public void pesosamoneda(double moneda) {
		double resultado = valorIngreso / moneda;
		lblMonto.setText(redondear(resultado));
	}
	public void monedaapesos(double moneda) {
		double resultado = valorIngreso * moneda;
		lblMonto.setText(redondear(resultado));
	}
	
	public String redondear(double valor) {
		DecimalFormat df = new DecimalFormat("0.00");
		df.setRoundingMode(RoundingMode.HALF_UP);
		return df.format(valor);
	}
	public boolean ValidarIngreso(String valoringresado) {
		try {
			double x = Double.parseDouble(valoringresado);
			if (x >0);
			valorIngreso = x;
			return true;
		}
		catch(NumberFormatException e) {
			lblMonto.setText("No ingreso un número!!");
			return false;
		}
	}
    
    
}
